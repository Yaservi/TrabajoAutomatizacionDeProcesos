// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoEscuela.Server.Models;

#nullable disable

namespace ProyectoEscuela.Server.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250622230426_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlumnoMateria", b =>
                {
                    b.Property<Guid>("Alumnoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Materiaid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Alumnoid", "Materiaid");

                    b.HasIndex("Materiaid");

                    b.ToTable("AlumnoMateria");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Alumno", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PKAlumno");

                    b.ToTable("Alumnos", (string)null);
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Asistencias", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlumnoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaAsistencia")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MateriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PKAsistencia");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Asistencias", (string)null);
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Calificacion", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ExamenFinal")
                        .HasColumnType("float");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMateria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.Property<double>("Participacion")
                        .HasColumnType("float");

                    b.Property<double>("PrimerParcial")
                        .HasColumnType("float");

                    b.Property<double>("SegundoParcial")
                        .HasColumnType("float");

                    b.Property<double>("TrabajoFinal")
                        .HasColumnType("float");

                    b.Property<double>("TrabajoInvestigacion")
                        .HasColumnType("float");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PKCalificacion");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdMateria");

                    b.ToTable("Calificaciones", (string)null);
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Maestro", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PKMaestro");

                    b.ToTable("Maestros", (string)null);
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Materia", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(850)
                        .HasColumnType("nvarchar(850)");

                    b.Property<Guid>("MaestroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PKMateria");

                    b.HasIndex("MaestroId");

                    b.ToTable("Materias", (string)null);
                });

            modelBuilder.Entity("AlumnoMateria", b =>
                {
                    b.HasOne("ProyectoEscuela.Server.Models.Alumno", null)
                        .WithMany()
                        .HasForeignKey("Alumnoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoEscuela.Server.Models.Materia", null)
                        .WithMany()
                        .HasForeignKey("Materiaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Asistencias", b =>
                {
                    b.HasOne("ProyectoEscuela.Server.Models.Alumno", "Alumno")
                        .WithMany("Asistencias")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoEscuela.Server.Models.Materia", "Materia")
                        .WithMany("Asistencias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Calificacion", b =>
                {
                    b.HasOne("ProyectoEscuela.Server.Models.Alumno", "Alumno")
                        .WithMany("Calificacion")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoEscuela.Server.Models.Materia", "Materia")
                        .WithMany("Calificacion")
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Materia", b =>
                {
                    b.HasOne("ProyectoEscuela.Server.Models.Maestro", "Maestro")
                        .WithMany("Materia")
                        .HasForeignKey("MaestroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Maestro");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Alumno", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Calificacion");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Maestro", b =>
                {
                    b.Navigation("Materia");
                });

            modelBuilder.Entity("ProyectoEscuela.Server.Models.Materia", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Calificacion");
                });
#pragma warning restore 612, 618
        }
    }
}
